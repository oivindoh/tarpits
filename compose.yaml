services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_PASSWORD: ${TARPIT_DATABASE_PASSWORD}
      POSTGRES_USER: postgres
  
  httpdb:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_PASSWORD: ${TARPIT_DATABASE_PASSWORD}
      POSTGRES_USER: postgres

  ssh-tarpit:
    build:
      context: ./ssh
      dockerfile: Dockerfile
    ports:
      - "2222:2222"
    environment:
      - TARPIT_MMDB_PATH=/GeoLite2-City.mmdb
      - TARPIT_IPDB_PATH=/ipnetdb_prefix_latest.mmdb
      - TARPIT_DATABASE_HOST=db
      - TARPIT_DATABASE_PASSWORD=${TARPIT_DATABASE_PASSWORD}
      - TARPIT_DATABASE_USER=postgres
      - TARPIT_LOG_LEVEL=DEBUG
      - TARPIT_RICKROLL=True
      - TARPIT_MMDB_KEY=${TARPIT_MMDB_KEY}
      - TARPIT_MAX_CONCURRENCY=3
    volumes:
      - "./GeoLite2-City.mmdb:/GeoLite2-City.mmdb"
      - "./GeoLite2-Country.mmdb:/GeoLite2-Country.mmdb"
      - "./ipnetdb_prefix_latest.mmdb:/ipnetdb_prefix_latest.mmdb"
    develop:
      watch:
        - action: rebuild
          path: ./ssh/ssh-teepee.py

  http-tarpit:
    build:
      context: ./http
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - TARPIT_DATABASE_HOST=httpdb
      - TARPIT_DATABASE_PASSWORD=${TARPIT_DATABASE_PASSWORD}
      - TARPIT_DATABASE_USER=postgres
      - TARPIT_LOG_LEVEL=DEBUG
      - TARPIT_RICKROLL=True
    develop:
      watch:
        - action: rebuild
          path: ./http-teepee.py
